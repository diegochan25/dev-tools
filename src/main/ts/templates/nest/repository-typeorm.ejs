<%- rules.javascript.moduleImporter(["FactoryProvider"], "@nestjs/common") %>
<% if (syntax === "sql") { %><%- rules.javascript.moduleImporter(["DataSource", "Repository"], "typeorm") %><% } else if (syntax === "mongodb") { %><%- rules.javascript.moduleImporter(["DataSource", "MongoRepository"], "typeorm") %><% } %>
<%- rules.javascript.moduleImporter([names.pascal], `./${names.kebab}.entity`) %>
import { <%- names.upper %>_REPOSITORY, <%- dataSource %> } from "@constants";

export const <%- names.camel %>Repository: FactoryProvider<<% if (syntax === "sql") { %>Repository<% } else if (syntax === "mongodb") { %>MongoRepository<% } %><<%- names.pascal %>>> = {
    provide: <%- names.upper %>_REPOSITORY,
    useFactory: (dataSource: DataSource) => dataSource.get<% if (syntax === "sql") { %>Repository<% } else if (syntax === "mongodb") { %>MongoRepository<% } %>(<%- names.pascal %>),
    inject: [<%- dataSource %>]
}<%- rules.javascript.semicolon %>




